name: ci-cd

on:
  push:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  MODE: dev

jobs:
  build-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: v0.6.0

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password:
            ${{ github.token }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ env.REGISTRY }}/${{ github.repository }}:${{ env.MODE }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Deploy on server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_SERVER }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd /srv/netomerch/backend/${{ env.MODE }}

            export REGISTRY=${{ env.REGISTRY }}
            export FRONTEND_IMAGE_NAME=${{ env.FRONTEND_IMAGE_NAME }}
            export IMAGE_NAME=netology-code/netomerch-backend
            export MODE=${{ env.MODE }}
            export DOMAIN_NAME=${{ secrets.DOMAIN_NAME }}

            echo "${{ github.token }}" | docker login ${{ env.REGISTRY }} --username ${{ github.actor }} --password-stdin
            docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.MODE }}

            docker-compose stop frontend
            docker-compose rm -f frontend
            docker-compose up -d

            for image in $(docker images | grep none | awk '{print $3}' | cat); do docker rmi "$image"; done
